<html>
<head>

  <title>日常</title>

  <!-- meta tags -->
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">


  <!-- CSS links -->
  <link href="../public/css/main.css" rel="stylesheet" type="text/css" />
  <link rel="shortcut icon" type="image/x-icon" href="public/media/DiveIcon.png" />
  <link href="../public/css/transitions.css" rel="stylesheet" type="text/css" />


  

</head>


<body>
<canvas id="canvas" width="643" height="714"></canvas>

<header>
  <nav class="g-nav">
      <form action="/" method="GET">
        <button type="submit" class="btn-home">家</button>
      </form>

      <form action="/collection/home" method="GET">
        <button type="submit" class="btn-collection">コレクション</button>
      </form>
      
      <form action="/kuro" method="GET">
        <button type="submit" class="btn-collection">光</button>
      </form>
      <%if (logged) { %>
      <form action="/logout" method="GET">
        <button type="submit" class="btn-logout">ログアウト</button>
      </form>
      <% } else{ %>  
      <form action="/login" method="POST">
        <button type="submit" class="btn-login">ログイン中</button>
      </form>
      <form action="/register">
        <button type="submit" class="btn-register">レジスター</button>
      </form>
      <% } %>         
  </nav>
</header>
<div class="content">

    <div class="rightList list">
      <h2>Right Guess</h2>
      <div>
        <ul id="rightWords">

      </ul>
      </div>
    </div>

    <div class="main-ui">
      <center id="fadein" class>

        <h1 class="kanji"></h1>

        <form action="" class="our-form" method="">
          <input type="text" class="our-field" name="guess" oninput="hitSound()">
          <button id="submit-btn" type="submit">Guess</button>
        </form>
      </center>
    </div>

    <div class="wrongList list">
      <h2>Wrong Guess</h2>
      <div>
        <ul id="wrongWords"></ul>

      </div>
    </div>

</div>

<div class="page_transi"><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div><div class="grid_transi"></div></div>


<style>
  #note {
    text-align: center;
    transition: 1s;
    margin: 1em 0;
    font-size: 1.1rem;
  }
  #note span {
    color: #FF0;
  }

  #wrongWords{
    margin-top: 20vh;
    font-size: 2.5rem;

    padding: 10px 20px;
    font-family: 'yasashisa';
  }

  #rightWords{
    margin-top: 2vh;
    font-size: 2rem;
    font-family: 'yasashisa';
    overflow: scroll
  }

  .list h2 {
    font-family: "yasashisa";
  }

  #rightWords ul {
    box-sizing: border-box;
  }

  li {
    list-style: none;
  }

  #rightWords li {
    padding: 10px 20px;
  }

  #rightWords li:nth-child(even) {
    background: #f8f8f841;
  } 

  #rightWords li:last-child {
    border-bottom: none;
  }

  #wrongWords li:nth-child(1){
    color:red;
  }

  /* ---      Scanlines      --- */
  body:before {
    content: "";
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1000;
    background-image: url(../media/overlay.png);
    background-repeat: all;
    background-position: 0px 0px;
    background-color: rgba(0, 0, 0, 0.1);
    animation-name: Static;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-timing-function: steps(4);
    box-shadow: inset 0px 0px 8em rgba(0,0,0,0.2);
  }

</style>
<!-- JavaScript -->
<!-- <script src="public/js/index.js"></script> -->
<script src="public/js/jquery.js"></script>
<script src="public/js/space.js"></script>
<script src="public/js/gl-matrix.js"></script>
<script src="public/js/write.js"></script>
<script type="text/javascript" src="public/js/wanakana.min.js"></script>
<script src="public/js/common.js"></script>

<script>



 // First mess
 const ourForm = document.querySelector(".our-form")
 var ourField = document.querySelector(".our-field")
 const wrong = document.querySelector(".wrong")
 const combo = document.querySelector(".combo")
 const kanji = document.querySelector('.kanji')
 const content = document.querySelector('.content')
 const scoreX = document.querySelector("#scoreRes")
 const main_ui = document.querySelector(".main-ui")
 const rightWords = document.querySelector('#rightWords')
 const wrongWords = document.querySelector('#wrongWords')

$( document ).ready(function() {
    $('.grid_transi').addClass('transi_in')
});

 // -- Audio file buffering -- //

 let threeHundredSFX = new Audio("../public/sfx/Audio/confirmation_004.ogg")
 let missSFX = new Audio("../public/sfx/Audio/error_005.ogg")
 let btnRoll = new Audio("../public/sfx/Audio/rollover3.ogg")
 let hitSFX = new Audio("../public/sfx/Audio/bong_001.ogg") 
 let btnClick = new Audio("../public/sfx/Audio/click2.ogg")
 let tdRoll = new Audio("../public/sfx/Audio/rollover2.ogg")
 btnRoll.volume = 0.03
 tdRoll.volume = 0.03 
 btnClick.volume = 0.07

 // -- Game state -- //

 let state = {
   kanj: null,
   hira: null,
   id: 0
 }




  // -- Initialisation -- //



 function initProblem(data){

   state.kanj = data[0].kanj
   state.hira = data[0].hira
   state.id = data[0].word_id

   

   kanji.style.fontFamily = "yasashisa"
   kanji.innerHTML = state.kanj
   ourField.value = ""
   ourField.focus()
 }


 function updateProblem(){ 

  console.log(deck)
  initProblem(deck) 
  console.log("kanj:"+state.kanj)
  console.log("id:"+state.id)
  console.log("hira:"+state.hira) // Coz Im dumb
 }



  // -- Anki -- //

 function addAnki(){
  deck.push({
    word_id: state.id, 
    kanj: state.kanj,
    hira: state.hira
  })
 }

 

 // -- Handling input -- //

 $( document ).ready(function() {
  wanakana.bind(ourField)
 })

 ourForm.addEventListener("submit", handleSubmit) 

 function handleSubmit(e){
   e.preventDefault()
   $("#jin-pop").addClass("hidden")
   state.i++


     // RIGHT ANSWER --                                                              
   if (ourField.value === state.hira){

    rightAnsAnim2()
    setTimeout("rightAns()", 600)
    
     // WRONG ANSWER --                                                             
   } else{
     wrongAnsAnim2()
     wrongAns()
   }
 }

 function rightAns(){

  // Check first if card is in the collection
  $.get('/isnew', { id: state.id }, data => {
     console.log("isnew: "+data)
  
    if (data) {

      // create the record for the card in the collection
      $.post('/good', { id: state.id })

    } else {

      // update the card
      $.ajax({
        url: '/good',
        type: 'PUT',
        data: { id: state.id }
      })
        .done(function(data) {
          console.log('Request completed successfully!');
        })
        .fail(function(error) {
          console.log('Request failed: ' + error);
        })


      $.get('/islearning', { id: state.id }, data => {

        if(data[0].state == 'learning'){
          addAnki()

        }else{

          $.ajax({
            url: '/dropword',
            type: 'PUT',
            data: { id: state.id }
          })
            .done(function(data) {
              console.log('Request completed successfully!');
            })
            .fail(function(error) {
              console.log('Request failed: ' + error);
            })
        }
      })  
    }
  }) 
  
  rightWords.innerHTML += "<li>"+ state.kanj + "</li>"
  deck.shift()
  console.log("updating problem..")

  if (deck.length != 0){
    updateProblem()

  } else {
  
    resetGame()
    content.style.display = "none"
  }
 }

 function wrongAns(){

  $.get('/isnew', { id: state.id }, data => {

    console.log("isnew: "+data)
    if (data) {
      $.post('/again', { id: state.id });

    } else {

      // update the card
      $.ajax({
        url: '/again',
        type: 'PUT',
        data: { id: state.id }
      })
        .done(function(data) {
          console.log('Request completed successfully!');
        })
        .fail(function(error) {
          console.log('Request failed: ' + error);
        })
    }
  })

  ankiToHTML()


  addAnki()
  deck.shift()

  console.log("updating problem..")

  updateProblem()

 }




 // -- Reset -- //


 function resetGame(){
   state.hira = ''
   state.kanj = ''
   deck = [] 
 }

// -- Answers Animations -- //

 var existingTimeout = null;

 function wrongAnsAnim2() {
  missSFX.currentTime = 0
  missSFX.volume = 0.1
  missSFX.play();
  $("#jin-pop").html(state.kanj +  '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp' + '    =>    ' + '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp'+ '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp'+ '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp'  + state.hira);
	$("#jin-pop").removeClass("hidden");

  $(".main-ui").addClass("shake-no");

  if (existingTimeout !== null) {
    clearTimeout(existingTimeout);
  }

  existingTimeout = setTimeout(function() {
    $(".main-ui").removeClass("shake-no");
  }, 300);
}

function rightAnsAnim2() {

  threeHundredSFX.currentTime = 0
  threeHundredSFX.volume = 0.1
  threeHundredSFX.play();

  $(".main-ui").addClass("yes");

  if (existingTimeout !== null) {
    clearTimeout(existingTimeout);
  }

  existingTimeout = setTimeout(function() {
    $(".main-ui").removeClass("yes");
    $(".main-ui").addClass("pulsing");
    setTimeout(function () {
      $(".main-ui").removeClass("pulsing");
    }, 500);
  }, 300);

}

// -- Audio -- //

function hitSound(){
  hitSFX.currentTime =  0
  hitSFX.volume = 0.05
  hitSFX.play()
}

function countdownSFXPlay(){
  countdownSFX.currentTime =  0
  countdownSFX.volume = 0.1
  countdownSFX.play()
}

$("button").on({
		mouseenter: function () {
      btnRoll.currentTime = 0
			btnRoll.play()
		}
	})


$("button").on("click", () => btnClick.play())

// -- PopUp Right Answer -- //


$(document).ready(function() {
	$(".wrongList").append('<div id="dialogs"></div>');
	$(".wrongList").append('<div id="jin-pop" class="hidden">Test pop</div>');
});

function ankiToHTML() {
 
  html$ = ''
  for(var key in deck){
    html$ += '<li>'+deck[key].kanj+'</li>'            
  }
  wrongWords.innerHTML = html$  
}










  let data = '<%- JSON.stringify(db) %>'
	let deck = JSON.parse(data)

  if (deck.length == 0) {
    content.style.display = "none"
  } else {
    content.style.display = "flex"
  }

  console.log(deck)
  updateProblem()









</script>
</body>
</html>