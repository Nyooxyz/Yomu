
<head>

    <title>〖 Kuro 〗</title>
    
    <!-- meta tags -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    
    <!-- CSS links -->
    <link href="../public/css/main.css" rel="stylesheet" type="text/css" />
    <link rel="shortcut icon" type="image/x-icon" href="public/media/DiveIcon.png" />
    <link rel="stylesheet" href="../public/css/table-sortable.css" type="text/css"/>

    
    
    
    
</head>


<header>
    <nav class="g-nav">
        <form action="/" method="GET">
          <button type="submit" class="btn-home">Game</button>
        </form>
  
        <form action="/collection/home" method="GET">
          <button type="submit" class="btn-collection">Collection</button>
        </form>
        <%if (logged) { %>
        <form action="/logout" method="GET">
          <button type="submit" class="btn-logout">Log Out</button>
        </form>
        <% } else{ %>  
        <form action="/login" method="POST">
          <button type="submit" class="btn-login">Log in</button>
        </form>
        <form action="/register">
          <button type="submit" class="btn-register">Register</button>
        </form>
        <% } %>         
    </nav>
  </header>

<div id="app">
    <form class="inputWrap" action="/kuro" method="POST">
      <textarea id="japText" name="txt" placeholder="<%=txtdJap%>"></textarea>
      <button id="btn-analyse" type="submit">Analyse</button>
    </form>
    

    <div id="countTable">
      <input type="text" placeholder="Search in table..." id="searchField">
      <div class="table-sortable">
        
      </div>
    </div>


</div>

 <style>
    @import url('https://fonts.googleapis.com/css?family=Press+Start+2P');
    
    *{
       font-family: 'Press Start 2P', cursive;
       box-sizing: border-box;
    }

    body{
      background:rgb(48, 48, 48);
    }

    #app {
      width: 100%;
      height: 100%;
      display: grid;
      gap: 0px 4%;
      grid-template-columns: 1.9fr 0.7fr;
      grid-template-rows: 0.8fr 1.4fr 0.8fr;
    }

    .inputWrap  {
        display: grid;
        grid-template-rows: 80% 20%;
        grid-column: 1/2;
        grid-row: 2/3;
        font-size: 1.15em;
        
    }

    #btn-analyse {
      grid-row: 2/-1;
      width: 100%;
      height: 100%;
    }

    #japText{
      grid-row: 1/2;
      background-color: rgb(190, 190, 190);
    }

    #countTable{
        grid-column: 2/-1;
        grid-row:2/3;
        border-collapse: collapse;
        display: grid;
        grid-template-rows: 10% 80% 10%;
    }

    html:before {
      content: "";
      background-image: none;
    }

    #searchField {
      grid-row: 1/2;
      width: 100%;
      height: 100%;
    }

    .table-sortable {
      height: 100%;
    }

    .gs-table-container{
      height: 100%;
    }

    .table{
      grid-row: 2/3;
      height: 100%;
    }

    .gs-pagination {
      grid-row: 3/-1;
      width: 100%;
      height: 100%;
    }


 </style>

 <script src="public/js/jquery.js"></script>
 <script src="public/js/table-sortable.js"></script>
 <script src="public/js/xregexp-all.js"></script>

 <script type="text/javascript" src="public/js/wanakana.min.js"></script>
 <script>

  

    /* -- Old method for hira WIP -- */

    /* $( document ).ready(function() {
      $('td').each(function(){
        $( this ).html(wanakana.toHiragana( $( this ).text() ))
     });
    }) */

    /* Pagination Table using table-sortable plugin */

    var data = <%- JSON.stringify(txtd) %>;

    /* Removing non-usable data */
    
    let impurity = data.filter( el => el.basic_form !== "*" )

    /* Filtering out non-nouns and non-verbs */

    let onlyNandV = impurity.filter( el => el.pos == "動詞" || el.pos == "名詞" )

    /* Removing hiragana only words with a regex range */

    let onlyKanj = onlyNandV.filter(el => /[\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u3005\u3007\u3021-\u3029\u3038-\u303B\u3400-\u4DB5\u4E00-\u9FCC\uF900-\uFA6D\uFA70-\uFAD9]/.test(el.basic_form))

    /* (∩｀-´)⊃━☆ﾟ.*･｡ﾟ */
    
    let filterdData = Object.values(onlyKanj.reduce((a,{basic_form, reading}) => {
      let key = `${basic_form}_${reading}`;
      a[key] = a[key] || {basic_form, reading, count : 0};
      a[key].count++;
      return a;
    }, {}));

    if (filterdData.length > 0){
      var columns = {
        'basic_form': 'Word',
        'reading': 'Reading',
        'count': 'Count'
      }

      var table = $('.table-sortable').tableSortable({
        data: filterdData,
        columns: columns,
        rowsPerPage: 5,
        pagination: true
      });
    }


 </script>

